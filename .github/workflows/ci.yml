name: Docker CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.project_version.outputs.NEW_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Get Maven Project Version And Set New Version
        id: project_version
        working-directory: myapp/
        run: |
          mvn clean --quiet
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          new_version=$(echo $current_version | awk -F. '{print $1 "." $2 "." $3+1}')
          mvn versions:set -DnewVersion=$new_version
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          NEW_VERSION: ${{ steps.project_version.outputs.NEW_VERSION }}
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/myapp:${{ NEW_VERSION }}


  run-pushed-image:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Run Docker Image
        env:
          NEW_VERSION: ${{needs.build-and-push-image.outputs.NEW_VERSION}}
        run: docker run -u nonrootuser -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/myapp:$NEW_VERSION
